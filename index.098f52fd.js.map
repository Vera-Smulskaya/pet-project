{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/js/newsAPI/newsAPI.js","src/js/newsAPI/news.js","src/js/rickandmortyAPI/rickandmortyAPI.js","src/js/placeholderAPI/placeholderAPI.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const BASE_URL = 'https://free-news.p.rapidapi.com/v1';\nconst END_POINT = '/search';\n\nconst options = {\n  headers: {\n    'X-RapidAPI-Key': '9b3ff61931msh1b42d77d34e33dap1c29cajsn3d3169',\n    'X-RapidAPI-HOST': 'free-news.p.rapidapi.com',\n  },\n};\n\nexport class NewsApi {\n  page = 1;\n  query = '';\n\n  getNews(query) {\n    if (query) {\n      this.query = query;\n    }\n    const params = new URLSearchParams({\n      q: this.query,\n      lang: 'en',\n      page: this.page,\n      page_size: 10,\n    });\n\n    return fetch(`${BASE_URL}${END_POINT}?${params}`, options).then(response =>\n      response.json()\n    );\n  }\n}\n","import { NewsApi } from './newsAPI';\n\nconst newsAPI = new NewsApi();\n\nconst refs = {\n  searchFormEl: document.querySelector('.js-search-form'),\n  loadMoreBtn: document.querySelector('.js-btn-load'),\n  articlesEl: document.querySelector('.js-article-list'),\n};\n\nconst onSearchForm = e => {\n  e.preventDefault();\n  const query = e.target.elements.query.value.trim();\n  e.target.reset();\n\n  newsAPI.getNews(query).then(data => {\n    renderMarkup(data.articles);\n  });\n  refs.loadMoreBtn.disabled = false;\n  refs.articlesEl.innerHTML = '';\n};\n\nconst onClickLoadMore = () => {\n  newsAPI.page += 1;\n  newsAPI.getNews().then(data => {\n    renderMarkup(data.articles);\n    if (data.page === data.total_pages) {\n      refs.loadMoreBtn.disabled = true;\n    }\n  });\n};\n\nrefs.searchFormEl.addEventListener('submit', onSearchForm);\nrefs.loadMoreBtn.addEventListener('click', onClickLoadMore);\n\nfunction renderMarkup(articles) {\n  const markup = articles\n    .map(({ media, title, summary, author }) => {\n      return `<li class=\"card news-card\">\n            <img src=\"${media}\" alt=\"\" loading=\"lazy\">\n            <h3>${title}</h3>\n            <p>${summary}<p>\n            <hr>\n            <span>${author}</span>\n            </li>\n  `;\n    })\n    .join('');\n  refs.articlesEl.insertAdjacentHTML('beforeEnd', markup);\n}\n","// resource\n// https://rickandmortyapi.com/documentation/#rest\n\nconst ulRef = document.querySelector('.js-characters-list');\nconst btnRef = document.querySelector('.js-load-more');\nlet page = 1;\n\nbtnRef.addEventListener('click', onClick);\n\nfunction onClick() {\n  page += 1;\n  fetchCharacter(page)\n    .then(data => {\n      createMarkup(data.results);\n\n      if (page === data.info.pages) {\n        btnRef.hidden = true;\n      }\n    })\n    .catch(error => console.log(error));\n}\n\nfunction fetchCharacter(page = 1) {\n  return fetch(`https://rickandmortyapi.com/api/character?page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfetchCharacter()\n  .then(data => {\n    createMarkup(data.results);\n    btnRef.hidden = false;\n  })\n  .catch(error => console.log(error));\n\nfunction createMarkup(arr) {\n  const markup = arr\n    .map(({ image, name, status }) => {\n      return `<li class=\"js-character-item\">\n      <img src=\"${image}\" alt=\"${name}\" class=\"js-character-img\">\n      <p class=\"js-character-name\">Name: <b>${name}</b></p>\n      <p class=\"js-character-status\">Status: <b>${status}</b></p>\n    </li>`;\n    })\n    .join();\n  ulRef.insertAdjacentHTML('beforeend', markup);\n}\n","// https://jsonplaceholder.typicode.com/guide/\n\nconst rootEl = document.getElementById('root');\nconst btnLoadMore = document.createElement('button');\nconsttoDoApi = new ToDoApi();\n\nbtnLoadMore.textContent = 'Load toDoes';\nrootEl.append(listEl, btnLoadMore);\nbtnLoadMore.addEventListener('click', onBtnLoadMoreClick);\nrootEl.addEventListener('click', onCheckboxChecked);\n\nclass ToDoApi {\n  static BASE_URL = 'https://jsonplaceholder.typicode.com/todos';\n  page = 1;\n\n  fetchToDoes() {\n    const searchParams = new URLSearchParams({\n      _limit: 10,\n      _page: this.page,\n    });\n\n    fetch(`${BASE_URL}?${searchParams}`)\n      .then(response => {\n        this.page += 1;\n        return response.json();\n      })\n      .catch(error => console.error(error));\n  }\n\n  onToDoUpdate(completed, id) {\n    return fetch(`${BASE_URL}/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        completed,\n      }),\n      headers: {\n        'Content-type': 'application/json; chatset=UTF-8',\n      },\n    })\n      .then(response => response.json())\n      .then(json => console.log(json));\n  }\n}\n\nfunction createToDoList(array = []) {\n  return array\n    .map(el => {\n      return `<li data-id=${el.id}>\n    <p>${el.title}</p>\n    <input ${el.completed ? 'checked' : ''} type=\"checkbox\"/>\n    </li>`;\n    })\n    .join('');\n}\n\nfunction onCheckboxChecked(event) {\n  const { target } = event;\n  if (target.tagName !== 'INPUT') {\n    return;\n  }\n  const elId = target.closest('li')?.dataset.id;\n\n  if (elId === undefined) {\n    return;\n  }\n}\n\nfunction onBtnLoadMoreClick() {\n  btnLoadMore.disabled = true;\n\n  ToDoApi.fetchToDoes()\n    .then(data => {\n      if (data.length === 0) {\n        btnLoadMore.style.display = 'none';\n        return;\n      }\n      const toDoLiElements = createToDoList(data);\n\n      listEl.insertAdjacentHTML('beforeend', toDoLiElements);\n    })\n    .finally(() => {\n      btnLoadMore.disabled = false;\n\n      if (ToDoApi.page === 2) {\n        btnLoadMore.textContent = 'Load More';\n      }\n    });\n}\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$cffb8b68b0b387a6$var$options","headers","$3a948a15d30776f5$var$newsAPI","getNews","query","this","params","URLSearchParams","q","lang","page","page_size","fetch","then","response","json","$parcel$interopDefault","$3a948a15d30776f5$var$refs","searchFormEl","document","querySelector","loadMoreBtn","articlesEl","$3a948a15d30776f5$var$renderMarkup","articles","markup","map","media","title","summary","author","join","insertAdjacentHTML","addEventListener","e","preventDefault","target","elements","trim","reset","data","disabled","innerHTML","total_pages","$412eb9761671a9fc$var$ulRef","$412eb9761671a9fc$var$btnRef","$412eb9761671a9fc$var$page","$412eb9761671a9fc$var$fetchCharacter","page1","ok","Error","status","$412eb9761671a9fc$var$createMarkup","arr","image","name","results","info","pages","hidden","catch","error","console","log","$c7b2f4b90f9ff312$var$rootEl","getElementById","$c7b2f4b90f9ff312$var$btnLoadMore","createElement","consttoDoApi","$c7b2f4b90f9ff312$var$ToDoApi","textContent","append","listEl","fetchToDoes","length","style","display","toDoLiElements","array","el","id","completed","$c7b2f4b90f9ff312$var$createToDoList","finally","event","ref","tagName","undefined","closest","dataset","searchParams","_limit","_page","BASE_URL","onToDoUpdate","method","body","JSON","stringify"],"version":3,"file":"index.098f52fd.js.map"}